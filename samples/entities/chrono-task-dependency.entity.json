{
  "$schema": "https://wcarmon.com/schemas/codegen/entity.schema.json",
  "fieldUris": [],
  "fields": [
    {
      "golang": {
        "overrideEffectiveType": "string"
      },
      "java": {
        "overrideProtobufSerde": {
          "deserializeTemplate": "UBUuid.parse(%s)",
          "serializeTemplate": "%s.toString()"
        },
        "overrideRDBMSSerde": {
          "deserializeTemplate": "UBUuid.parse(%s)",
          "serializeTemplate": "%s.toString()"
        },
        "test": {
          "randomValueBuilder": "UBUuid.random()"
        }
      },
      "kotlin": {
        "overrideProtobufSerde": {
          "deserializeTemplate": "UBUuid.parse(%s)",
          "serializeTemplate": "%s.toString()"
        },
        "overrideRDBMSSerde": {
          "deserializeTemplate": "UBUuid.parse(%s)",
          "serializeTemplate": "%s.toString()"
        },
        "test": {
          "randomValueBuilder": "UBUuid.random()"
        }
      },
      "name": "fromTask",
      "positionInId": 0,
      "protobuf": {
        "overrideEffectiveType": "string"
      },
      "rdbms": {
        "validation": {
          "requireTrimmed": true
        },
        "varcharLength": 36
      },
      "type": "UBUuid"
    },
    {
      "golang": {
        "overrideEffectiveType": "string"
      },
      "java": {
        "overrideProtobufSerde": {
          "deserializeTemplate": "UBUuid.parse(%s)",
          "serializeTemplate": "%s.toString()"
        },
        "overrideRDBMSSerde": {
          "deserializeTemplate": "UBUuid.parse(%s)",
          "serializeTemplate": "%s.toString()"
        },
        "test": {
          "randomValueBuilder": "UBUuid.random()"
        }
      },
      "kotlin": {
        "overrideProtobufSerde": {
          "deserializeTemplate": "UBUuid.parse(%s)",
          "serializeTemplate": "%s.toString()"
        },
        "overrideRDBMSSerde": {
          "deserializeTemplate": "UBUuid.parse(%s)",
          "serializeTemplate": "%s.toString()"
        },
        "test": {
          "randomValueBuilder": "UBUuid.random()"
        }
      },
      "name": "toTask",
      "positionInId": 1,
      "protobuf": {
        "overrideEffectiveType": "string"
      },
      "rdbms": {
        "validation": {
          "requireTrimmed": true
        },
        "varcharLength": 36
      },
      "type": "UBUuid"
    },
    {
      "enumType": true,
      "golang": {
        "overrideEffectiveType": "ChronoTaskDependencyType"
      },
      "java": {
        "defaultValue": {
          "quoteValue": false,
          "value": "ChronoTaskDependencyType.FinishStart"
        },
        "overrideProtobufSerde": {
          "deserializeTemplate": "ChronoTaskDependencyType.fromProtoValue(%s)",
          "serializeTemplate": "%s.toProtoValue()"
        },
        "overrideRDBMSSerde": {
          "deserializeTemplate": "ChronoTaskDependencyType.fromDBValue(%s)",
          "serializeTemplate": "%s.toDBValue()"
        },
        "test": {}
      },
      "kotlin": {
        "defaultValue": {
          "quoteValue": false,
          "value": "ChronoTaskDependencyType.FinishStart"
        },
        "overrideProtobufSerde": {
          "deserializeTemplate": "ChronoTaskDependencyType.fromProtoValue(%s)",
          "serializeTemplate": "%s.toProtoValue()"
        },
        "overrideRDBMSSerde": {
          "deserializeTemplate": "ChronoTaskDependencyType.fromDBValue(%s)",
          "serializeTemplate": "%s.toDBValue()"
        },
        "test": {}
      },
      "name": "type",
      "protobuf": {
        "overrideEffectiveType": "string"
      },
      "rdbms": {
        "overrideEffectiveType": "VARCHAR",
        "validation": {
          "requireMatchesRegex": "^[FS]{2}$",
          "requireTrimmed": true
        },
        "varcharLength": 2
      },
      "type": "ChronoTaskDependencyType"
    }
  ],
  "indexes": [],
  "interFieldValidations": [
    {
      "fieldName0": "fromTask",
      "fieldName1": "toTask",
      "type": "notEqual"
    }
  ],
  "name": "ChronoTaskDependency",
  "pkg": "com.wcarmon.chrono.model",
  "rdbms": {
    "schema": "test"
  }
}
